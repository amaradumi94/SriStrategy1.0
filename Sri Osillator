// This source code is free to use, copy, and alter in any way you choose.
// ...but credit is always nice :)

//@version=4

study( "Sri Combo Oscillator", "Sri Combo •", false, format.price, 2 )

shrsi = input(true, "Show Rsi")
shma = input(false, "Show MAs on RSI")
shmacd =  input(false, "Show MACD")
shsto = input(false, "Show Stoch")


//RSI Divergences. 

len = input(title="RSI Period", minval=1, defval=14)
src = input(title="RSI Source", defval=close)
lbR = input(title="Pivot Lookback Right", defval=5)
lbL = input(title="Pivot Lookback Left", defval=5)
rangeUpper = input(title="Max of Lookback Range", defval=60)
rangeLower = input(title="Min of Lookback Range", defval=5)
plotBull = input(title="Plot Bullish", defval=true)
plotHiddenBull = input(title="Plot Hidden Bullish", defval=true)
plotBear = input(title="Plot Bearish", defval=true)
plotHiddenBear = input(title="Plot Hidden Bearish", defval=true)
rsiOversold = input(30, title = 'RSI Oversold', minval = 0, maxval = 50, type = input.integer)
rsiOverbought = input(70, title = 'RSI Overbought', minval = 50, maxval = 100, type = input.integer)

bearColor = color.red
bullColor = color.green
hiddenBullColor = color.new(color.green, 80)
hiddenBearColor = color.new(color.red, 80)
textColor = color.white
noneColor = color.new(color.white, 100)
colorPurple = #8D1699
colorGreen = color.green
colorRed = color.red


osc = rsi(src, len)

rsiColor = osc <= rsiOversold ? colorGreen : osc >= rsiOverbought ? colorRed : colorPurple

plot(not shmacd and shrsi ? osc :na, title="RSI", linewidth=2, color=rsiColor)
hline(not shmacd and shrsi? 50 :na, title="Middle Line", linestyle=hline.style_dotted)
obLevelr = hline(not shmacd and shrsi ? 70 :na, title="Overbought", linestyle=hline.style_dotted)
osLevelr = hline(not shmacd and shrsi ? 30 :na, title="Oversold", linestyle=hline.style_dotted)
fill(obLevelr, osLevelr, title="Background", color=#9915FF, transp=90)

plFound = na(pivotlow(osc, lbL, lbR)) ? false : true
phFound = na(pivothigh(osc, lbL, lbR)) ? false : true
_inRange(cond) =>
	bars = barssince(cond == true)
	rangeLower <= bars and bars <= rangeUpper

//------------------------------------------------------------------------------
// Regular Bullish
// Osc: Higher Low

oscHL = osc[lbR] > valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Lower Low

priceLL = low[lbR] < valuewhen(plFound, low[lbR], 1)
bullCond = plotBull and priceLL and oscHL and plFound

plot(not shmacd and shrsi ? (plFound ? osc[lbR] : na) :na,
     offset=-lbR,
     title="Regular Bullish",
     linewidth=2,
     color=(bullCond ? bullColor : noneColor),
     transp=0
     )

plotshape(not shmacd and shrsi ? (bullCond ? osc[lbR] : na) :na,
	 offset=-lbR,
	 title="Regular Bullish Label",
	 text=" Bull ",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor,
	 transp=0
	 )

//------------------------------------------------------------------------------
// Hidden Bullish
// Osc: Lower Low

oscLL = osc[lbR] < valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Higher Low

priceHL = low[lbR] > valuewhen(plFound, low[lbR], 1)
hiddenBullCond = plotHiddenBull and priceHL and oscLL and plFound

plot(not shmacd and shrsi ? ( plFound ? osc[lbR] : na) :na,
	 offset=-lbR,
	 title="Hidden Bullish",
	 linewidth=2,
	 color=(hiddenBullCond ? hiddenBullColor : noneColor),
	 transp=0
	 )

plotshape(not shmacd and shrsi? (hiddenBullCond ? osc[lbR] : na) :na,
	 offset=-lbR,
	 title="Hidden Bullish Label",
	 text=" H Bull ",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor,
	 transp=0
	 )

//------------------------------------------------------------------------------
// Regular Bearish
// Osc: Lower High

oscLH = osc[lbR] < valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Higher High

priceHH = high[lbR] > valuewhen(phFound, high[lbR], 1)

bearCond = plotBear and priceHH and oscLH and phFound

plot(not shmacd and shrsi ? (phFound ? osc[lbR] : na):na,
	 offset=-lbR,
	 title="Regular Bearish",
	 linewidth=2,
	 color=(bearCond ? bearColor : noneColor),
	 transp=0
	 )

plotshape(not shmacd and shrsi? (bearCond ? osc[lbR] : na):na,
	 offset=-lbR,
	 title="Regular Bearish Label",
	 text=" Bear ",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor,
	 transp=0
	 )

//------------------------------------------------------------------------------
// Hidden Bearish
// Osc: Higher High

oscHH = osc[lbR] > valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Lower High

priceLH = high[lbR] < valuewhen(phFound, high[lbR], 1)

hiddenBearCond = plotHiddenBear and priceLH and oscHH and phFound

plot(not shmacd and shrsi ? (phFound ? osc[lbR] : na):na,
	 offset=-lbR,
	 title="Hidden Bearish",
	 linewidth=2,
	 color=(hiddenBearCond ? hiddenBearColor : noneColor),
	 transp=0
	 )

plotshape (not shmacd and shrsi? (hiddenBearCond ? osc[lbR] : na):na,
	 offset=-lbR,
	 title="Hidden Bearish Label",
	 text=" H Bear ",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor,
	 transp=0
	 )
	 
	 
//ema on rsi

len2 = input(9, minval=1, title="SMA Length")
len3 = input(45, minval=1, title="EMA Length") 


smaRSI = sma(osc,len2)
emaRSI = ema(osc,len3)
plot(not shmacd and shma ? smaRSI : na, title="SMA", linewidth=1, color=#006fc3,transp=0)
plot(not shmacd and shma ? emaRSI : na, title="EMA", linewidth=1, color=#bf212f,transp=0)
	 
//stoch
	 
smoothK = input(3, minval=1)
smoothD = input(3, minval=1)
lengthRSI = input(14, minval=1)
lengthStoch = input(14, minval=1)
src1 = input(close, title="RSI Source")
rsi1 = rsi(src, lengthRSI)
k = sma(stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = sma(k, smoothD)
plot(shsto ? k :na, color=#F1C232, transp=10, linewidth=2, title="%K")
plot(shsto ? d :na, color=#CC0000, transp=10, linewidth=2, title="%D")
h0 = hline(shsto ? 80 :na, title="Stoch RSI UpperLimit")
h1 = hline(shsto ? 20 :na, title="Stoch RSI LowerLimit")
fill(h0, h1, color=color.black, transp=100, title="Stoch RSI Hlines Background")

// macd

mtf1 = input(title="MTF MACD TF", type=input.resolution, defval="")
fast_length = input(title="Fast Length", type=input.integer, defval=12)
slow_length = input(title="Slow Length", type=input.integer, defval=26)
srcmd = input(title="Source", type=input.source, defval=close)
signal_length = input(title="Signal Smoothing", type=input.integer, minval = 1, maxval = 50, defval = 9)
sma_source = input(title="Oscillator MA Type", type=input.string, defval="EMA", options=["SMA", "EMA"])
sma_signal = input(title="Signal Line MA Type", type=input.string, defval="EMA", options=["SMA", "EMA"])
// Plot colors
col_macd = input(#2962FF, "MACD Line  ", input.color, group="Color Settings", inline="MACD")
col_signal = input(#FF6D00, "Signal Line  ", input.color, group="Color Settings", inline="Signal")
col_grow_above = input(#26A69A, "Above   Grow", input.color, group="Histogram", inline="Above")
col_fall_above = input(#B2DFDB, "Fall", input.color, group="Histogram", inline="Above")
col_grow_below = input(#FFCDD2, "Below Grow", input.color, group="Histogram", inline="Below")
col_fall_below = input(#FF5252, "Fall", input.color, group="Histogram", inline="Below")
// Calculating

smaf = security(syminfo.tickerid, mtf1, sma(srcmd, fast_length))
smas = security(syminfo.tickerid, mtf1, sma(srcmd, slow_length))

emaf = security(syminfo.tickerid, mtf1, ema(srcmd, fast_length))
emas = security(syminfo.tickerid, mtf1, ema(srcmd, slow_length))

fast_ma = sma_source == "SMA" ? smaf : emaf
slow_ma = sma_source == "SMA" ? smas : emas
macd = fast_ma - slow_ma

smafm = security(syminfo.tickerid, mtf1, sma(macd, signal_length))
emafm = security(syminfo.tickerid, mtf1, ema(macd, signal_length))

signal = sma_signal == "SMA" ? smafm : emafm
hist = macd - signal

plot(not shrsi and shmacd ? hist : na, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below)))
plot(not shrsi and shmacd ? macd : na, title="MACD", color=col_macd)
plot(not shrsi and shmacd ? signal : na, title="Signal", color=col_signal)
